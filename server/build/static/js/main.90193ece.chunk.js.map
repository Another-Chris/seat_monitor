{"version":3,"sources":["assets/logo.png","components/Navbar/Navbar.js","socket/index.js","context/socketContext.js","components/Progress/Progress.js","components/Seats/Info.js","utils/formatMin.js","utils/getAvailability.js","components/Seats/SeatBot/InfoTable.js","components/Seats/SeatBot/Header.js","components/Seats/Predictor/DateTimeSelector.js","components/Seats/Predictor/DisplayInfo.js","components/Seats/Predictor/Predictor.js","components/Seats/SeatBot/SeatBot.js","components/Seats/SeatDisplay.js","components/Seats/SeatsIcons.js","components/Seats/Seats.js","App.js","index.js"],"names":["StyledAppBar","styled","AppBar","backgroundColor","StyledLogo","maxWidth","StyledTitle","Typography","theme","color","palette","grey","marginRight","spacing","StyledToolbar","Toolbar","display","justifyContent","padding","Navbar","position","variant","src","Logo","IO_EVENTS","connectIo","Promise","resolve","reject","socket","io","process","on","error","seatObj","SocketContext","createContext","SocketContextProvider","children","useState","setSocket","useEffect","a","appSocket","emit","console","log","connect","Provider","value","StyledContainer","alignItems","flexDirection","Progress","style","marginBottom","CircularProgress","InfoContainer","StyledTypo","breakpoints","down","fontSize","typography","h2","StyledProgress","LinearProgress","small","light","primary","main","Info","availableSeats","formatMin","mins","h","Math","floor","m","getAvailability","seatInfo","availibility","availability","length","filter","el","statusCode","InfoTable","useContext","SeatInfoContext","Table","TableBody","TableRow","TableCell","Container","Title","Header","badgeColor","seatNo","status","Badge","badgeContent","Divider","DateTimeContainer","StyledDivider","margin","DateTimeSelector","date","setDate","time","setTime","PredictorContext","setLoading","setPredicted","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","onChange","val","renderInput","params","TextField","TimePicker","Button","disabled","onClick","fetch","server","method","then","res","json","data","Paper","minWidth","borderRadius","marginLeft","StyledText","fontWeight","InfoText","success","textTransform","DisplayInfo","loading","predicted","elevation","Number","confidence","toFixed","StyledPaper","marginTop","Predictor","anchorEl","closePredict","Popper","placement","open","IconButton","Overlay","width","height","left","top","cursor","BtnContainer","SeatBot","close","anchorEl2","setAnchorEl2","e","id","onMouseUp","target","modifiers","name","enabled","StyledIcon","EventSeatIcon","seatColor","seatColorHover","dark","warning","fill","ShowTime","SeatDisplay","duration","clicked","setClicked","memo","SeatIcons","gridTemplateColumns","rowGap","SeatsIcons","seats","SeatContext","map","seat","minHeight","Seats","setSeats","response","getSeats","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90193ece.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.87e5137d.png\";","import { Typography, AppBar, Toolbar } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Logo from \"./../../assets/logo.png\";\r\n\r\nconst StyledAppBar = styled(AppBar)({\r\n  backgroundColor: \"white\",\r\n});\r\n\r\nconst StyledLogo = styled(\"img\")({\r\n  maxWidth: 250,\r\n});\r\n\r\nconst StyledTitle = styled(Typography)(({ theme }) => ({\r\n  color: theme.palette.grey[900],\r\n  marginRight: theme.spacing(20),\r\n}));\r\n\r\nconst StyledToolbar = styled(Toolbar)(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  padding: theme.spacing(3),\r\n}));\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <StyledAppBar position=\"static\">\r\n      <StyledToolbar>\r\n        <StyledTitle variant=\"h5\">Seat Monitor</StyledTitle>\r\n        <StyledLogo src={Logo} />\r\n      </StyledToolbar>\r\n    </StyledAppBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import io from \"socket.io-client\";\r\n\r\nconst server = process.env.REACT_APP_SERVER;\r\n// const server = process.env.REACT_APP_SERVER_DEV;\r\n\r\nexport const IO_EVENTS = {\r\n  GET_SEATS_INFO: \"GET_SEATS_INFO\",\r\n  RECEIVE_SEATS_INFO: \"RECEIVE_SEATS_INFO\",\r\n};\r\n\r\nexport const connectIo = () =>\r\n  new Promise((resolve, reject) => {\r\n    const socket = io(server);\r\n\r\n    socket.io.on(\"error\", (error) => reject(error));\r\n    socket.on(\"connect\", (seatObj) => {\r\n      resolve(socket);\r\n    });\r\n  });\r\n","import { createContext, useEffect, useState } from \"react\";\r\nimport { connectIo, IO_EVENTS } from \"../socket\";\r\n\r\nexport const SocketContext = createContext({});\r\n\r\nconst SocketContextProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function connect() {\r\n      try {\r\n        const appSocket = await connectIo();\r\n\r\n        appSocket.emit(IO_EVENTS.GET_SEATS_INFO);\r\n\r\n        setSocket(appSocket);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    connect();\r\n  }, []);\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SocketContextProvider;\r\n","import { CircularProgress, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nconst StyledContainer = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\"\r\n}));\r\n\r\nfunction Progress() {\r\n  return (\r\n    <StyledContainer>\r\n      <Typography style = {{marginBottom: \"1em\"}} variant=\"body2\"> loading... </Typography>\r\n      <CircularProgress />\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default Progress;\r\n","import { LinearProgress, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst InfoContainer = styled(\"div\")(({ theme }) => ({}));\r\n\r\nconst StyledTypo = styled(Typography)(({theme}) => ({\r\n  [theme.breakpoints.down(\"sm\")]: {\r\n    fontSize: theme.typography.h2.fontSize\r\n  }\r\n}))\r\n\r\nconst StyledProgress = styled(LinearProgress)(({ theme, value }) => {\r\n  const small = value < 60;\r\n  return {\r\n    marginBottom: theme.spacing(1),\r\n    backgroundColor: small\r\n      ? theme.palette.error.light + \"30\"\r\n      : theme.palette.primary.light + \"30\",\r\n    \"& .MuiLinearProgress-bar\": {\r\n      backgroundColor: small\r\n        ? theme.palette.error.main\r\n        : theme.palette.primary.main,\r\n    },\r\n  };\r\n});\r\n\r\nfunction Info({ availableSeats }) {\r\n  return (\r\n    <InfoContainer>\r\n      <StyledTypo variant=\"h1\">{availableSeats}</StyledTypo>\r\n      <StyledProgress value={20 * availableSeats} variant=\"determinate\" />\r\n      <Typography variant=\"h6\">Available Seats</Typography>\r\n    </InfoContainer>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","export default function formatMin(mins) {\r\n  if (mins < 60) {\r\n    if (mins < 1) {\r\n      return \"< 1 minute\";\r\n    } else {\r\n      return mins + \" minutes\";\r\n    }\r\n  } else {\r\n    const h = Math.floor(mins / 60);\r\n    const m = mins - h * 60;\r\n    return `${h} hour ${m} minutes`;\r\n  }\r\n}\r\n","export default function getAvailability(seatInfo) {\r\n  const availibility = seatInfo.availability;\r\n\r\n  if (availibility.length === 0) {\r\n    return 0;\r\n  } else {\r\n    const numAvailable = availibility.filter(\r\n      (el) => el.statusCode === 1\r\n    ).length;\r\n    return numAvailable / availibility.length;\r\n  }\r\n}\r\n","import { Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { SeatInfoContext } from \"../SeatDisplay\";\r\n\r\nimport getAvailability from \"../../../utils/getAvailability\";\r\n\r\nfunction InfoTable() {\r\n  const { seatInfo } = useContext(SeatInfoContext);\r\n\r\n  return (\r\n    <>\r\n      <Table>\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>average availability</TableCell>\r\n            <TableCell>{getAvailability(seatInfo)} %</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoTable;\r\n","import { Typography, Divider, Badge } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useContext } from \"react\";\r\nimport { SeatInfoContext } from \"../SeatDisplay\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\nconst Title = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n}));\r\n\r\nfunction Header() {\r\n  const { seatInfo } = useContext(SeatInfoContext);\r\n  const { seatNo, status } = seatInfo;\r\n\r\n  let badgeColor;\r\n  if (status === \"available\") {\r\n    badgeColor = \"success\";\r\n  } else if (status === \"occupied\") {\r\n    badgeColor = \"error\";\r\n  } else if (status === \"suspicious\") {\r\n    badgeColor = \"warning\";\r\n  }\r\n  return (\r\n    <Container>\r\n      <Title>\r\n        <Typography variant=\"h6\">No.{seatNo}</Typography>\r\n        <Badge badgeContent={status} color={badgeColor}></Badge>\r\n      </Title>\r\n\r\n      <Divider />\r\n      <Typography variant=\"caption\">very popular</Typography>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { TextField, Button } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport DatePicker from \"@mui/lab/DatePicker\";\r\nimport TimePicker from \"@mui/lab/TimePicker\";\r\nimport { useContext, useState } from \"react\";\r\nimport { PredictorContext } from \"./Predictor\";\r\n\r\nconst server = process.env.REACT_APP_SERVER;\r\n\r\nconst DateTimeContainer = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n}));\r\n\r\nconst StyledDivider = styled(\"div\")(({ theme }) => ({\r\n  margin: `${theme.spacing(1)} 0`,\r\n}));\r\n\r\nfunction DateTimeSelector() {\r\n  const [date, setDate] = useState(null);\r\n  const [time, setTime] = useState(null);\r\n  const { setLoading, setPredicted } = useContext(PredictorContext);\r\n\r\n  //=== functions\r\n  const onDateChange = (val) => setDate(val);\r\n\r\n  const onTimeChange = (val) => setTime(val);\r\n\r\n  const onPredict = () => {\r\n    setLoading(true);\r\n    fetch(server + \"/predict\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setLoading(false);\r\n        setPredicted(data);\r\n      });\r\n  };\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <DateTimeContainer>\r\n        <DatePicker\r\n          label=\"date\"\r\n          onChange={onDateChange}\r\n          value={date}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <StyledDivider />\r\n        <TimePicker\r\n          label=\"time\"\r\n          onChange={onTimeChange}\r\n          value={time}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n        <StyledDivider />\r\n        <Button disabled = {!(date && time)} onClick={onPredict} variant=\"contained\">\r\n          Predict\r\n        </Button>\r\n      </DateTimeContainer>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\nexport default DateTimeSelector;\r\n","import { CircularProgress, Paper, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useContext } from \"react\";\r\nimport { PredictorContext } from \"./Predictor\";\r\n\r\nconst StyledContainer = styled(Paper)(({ theme }) => ({\r\n  minWidth: 300,\r\n  maxWidth: 400,\r\n  borderRadius: 3,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  marginLeft: theme.spacing(1),\r\n}));\r\n\r\nconst StyledText = styled(Typography)(({ theme }) => ({\r\n  fontWeight: \"bold\",\r\n  color: theme.palette.grey[200],\r\n}));\r\n\r\nconst InfoText = styled(Typography)(({ theme, status }) => ({\r\n  fontWeight: \"bold\",\r\n  color:\r\n    status === \"available\"\r\n      ? theme.palette.success.main\r\n      : theme.palette.error.main,\r\n  textTransform: \"uppercase\",\r\n  margin: `${theme.spacing(1)} 0`,\r\n}));\r\n\r\nfunction DisplayInfo() {\r\n  const { loading, predicted } = useContext(PredictorContext);\r\n  return (\r\n    <StyledContainer elevation={0} variant=\"outlined\">\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : !predicted ? (\r\n        <StyledText variant=\"h5\">Results</StyledText>\r\n      ) : (\r\n        <div>\r\n          <Typography variant=\"caption\">This seat will probabily be</Typography>\r\n          <InfoText status={predicted.status} variant=\"h5\">\r\n            {predicted.status}\r\n          </InfoText>\r\n          <Typography>\r\n            Availability: {Number(predicted.confidence).toFixed(2)} %\r\n          </Typography>\r\n        </div>\r\n      )}\r\n    </StyledContainer>\r\n  );\r\n}\r\n\r\nexport default DisplayInfo;\r\n","import { Popper, Paper, Typography, IconButton } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport DateTimeSelector from \"./DateTimeSelector\";\r\nimport DisplayInfo from \"./DisplayInfo\";\r\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\r\nimport { createContext, useState } from \"react\";\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(1),\r\n}));\r\n\r\nconst StyledContainer = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  marginTop: theme.spacing(2),\r\n}));\r\n\r\nconst Header = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  marginTop: theme.spacing(2),\r\n  alignItems: \"center\",\r\n}));\r\n\r\nexport const PredictorContext = createContext({});\r\n\r\nfunction Predictor({ anchorEl, closePredict }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [predicted, setPredicted] = useState(null);\r\n\r\n  return (\r\n    <Popper placement=\"right\" anchorEl={anchorEl} open={!!anchorEl}>\r\n      <PredictorContext.Provider\r\n        value={{ loading, setLoading, predicted, setPredicted }}\r\n      >\r\n        <StyledPaper>\r\n          <Header>\r\n            <IconButton onClick={closePredict}>\r\n              <ArrowBackIosNewIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\">Predictor</Typography>\r\n          </Header>\r\n          <StyledContainer>\r\n            <DateTimeSelector />\r\n            <DisplayInfo />\r\n          </StyledContainer>\r\n        </StyledPaper>\r\n      </PredictorContext.Provider>\r\n    </Popper>\r\n  );\r\n}\r\n\r\nexport default Predictor;\r\n","import { Popper, Paper, Button } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport InfoTable from \"./InfoTable\";\r\nimport Header from \"./Header\";\r\nimport Predictor from \"../Predictor/Predictor\";\r\nimport { useState } from \"react\";\r\n\r\nconst Overlay = styled(\"div\")(({ theme, open }) => ({\r\n  display: open ? \"block\" : \"none\",\r\n  width: \"100vw\",\r\n  height: \"100vh\",\r\n  position: \"fixed\",\r\n  backgroundColor: \"#343a4080\",\r\n  left: 0,\r\n  top: 0,\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\nconst BtnContainer = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"end\",\r\n  marginTop: theme.spacing(2),\r\n  marginRight: theme.spacing(1),\r\n}));\r\n\r\nfunction SeatBot({ anchorEl, close }) {\r\n  const [anchorEl2, setAnchorEl2] = useState(null);\r\n\r\n  const onMouseUp = (e) => {\r\n    if (e.target.id === \"overlay\") {\r\n      close();\r\n      closePredict();\r\n    }\r\n  };\r\n\r\n  const onClickPredict = (e) => setAnchorEl2(anchorEl);\r\n  const closePredict = (e) => setAnchorEl2(null);\r\n\r\n  return (\r\n    <Overlay id=\"overlay\" onMouseUp={onMouseUp} open={anchorEl ? 1 : 0}>\r\n      {!anchorEl2 ? (\r\n        <Popper\r\n          placement=\"right\"\r\n          modifiers={[{ name: \"arrow\", enabled: true }]}\r\n          open={!!anchorEl}\r\n          anchorEl={anchorEl}\r\n        >\r\n          <StyledPaper>\r\n            <Header />\r\n            <InfoTable />\r\n            <BtnContainer>\r\n              <Button onClick={onClickPredict} variant=\"outlined\">\r\n                predict\r\n              </Button>\r\n            </BtnContainer>\r\n          </StyledPaper>\r\n        </Popper>\r\n      ) : (\r\n        <Predictor closePredict={closePredict} anchorEl={anchorEl2} />\r\n      )}\r\n    </Overlay>\r\n  );\r\n}\r\n\r\nexport default SeatBot;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { createContext, memo, useState } from \"react\";\r\nimport EventSeatIcon from \"@mui/icons-material/EventSeat\";\r\n\r\nimport formatMin from \"../../utils/formatMin\";\r\n\r\nimport SeatBot from \"./SeatBot/SeatBot\";\r\n\r\nexport const SeatInfoContext = createContext({});\r\n\r\nconst StyledIcon = styled(EventSeatIcon)(({ theme, status }) => {\r\n  let seatColor, seatColorHover;\r\n  if (status === \"available\") {\r\n    seatColor = theme.palette.primary.dark;\r\n    seatColorHover = theme.palette.primary.light;\r\n  } else if (status === \"occupied\") {\r\n    seatColor = theme.palette.grey[300];\r\n    seatColorHover = theme.palette.grey[500];\r\n  } else if (status === \"suspicious\") {\r\n    seatColor = theme.palette.warning.main;\r\n    seatColorHover = theme.palette.warning.light;\r\n  }\r\n  return {\r\n    display: \"block\",\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    fill: seatColor,\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      fill: seatColorHover,\r\n    },\r\n  };\r\n});\r\n\r\nconst Info = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  marginLeft: theme.spacing(2),\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n}));\r\n\r\nconst ShowTime = styled(Typography)(({ theme }) => ({\r\n  marginTop: 0.5 * theme.spacing(1),\r\n}));\r\n\r\nfunction SeatDisplay({ seatInfo }) {\r\n  const { status, duration, seatNo } = seatInfo;\r\n  const [clicked, setClicked] = useState();\r\n\r\n  //=== functions\r\n  const onClickIcon = (e) => setClicked(e.target);\r\n  const close = () => setClicked(null);\r\n  return (\r\n    <SeatInfoContext.Provider value={{ seatInfo }}>\r\n      <Container>\r\n        <StyledIcon onClick={onClickIcon} key={seatNo} status={status} />\r\n        <Info>\r\n          <Typography variant=\"caption\">{status} for</Typography>\r\n          <ShowTime variant=\"h6\">{formatMin(duration)}</ShowTime>\r\n          <SeatBot anchorEl={clicked} close={close} />\r\n        </Info>\r\n      </Container>\r\n    </SeatInfoContext.Provider>\r\n  );\r\n}\r\n\r\nexport default memo(SeatDisplay);\r\n","import { styled } from \"@mui/material/styles\";\r\nimport { memo, useContext } from \"react\";\r\nimport SeatDisplay from \"./SeatDisplay\";\r\nimport { SeatContext } from \"./Seats\";\r\n\r\nconst SeatIcons = styled(\"div\")(({ theme }) => ({\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"repeat(2,1fr)\",\r\n  marginTop: theme.spacing(5),\r\n  rowGap: theme.spacing(3),\r\n}));\r\n\r\nfunction SeatsIcons() {\r\n  const { seats } = useContext(SeatContext);\r\n  return (\r\n    <SeatIcons>\r\n      {seats.map((seat) => (\r\n        <SeatDisplay key={seat.seatNo} seatInfo={seat} />\r\n      ))}\r\n    </SeatIcons>\r\n  );\r\n}\r\n\r\nexport default memo(SeatsIcons);\r\n","import { styled } from \"@mui/material/styles\";\r\nimport { memo, useContext, useEffect, useState, createContext } from \"react\";\r\n\r\nimport { SocketContext } from \"../../context/socketContext\";\r\nimport { IO_EVENTS } from \"./../../socket\";\r\n\r\nimport Progress from \"../Progress/Progress\";\r\nimport Info from \"./Info\";\r\nimport SeatsIcons from \"./SeatsIcons\";\r\n\r\nexport const SeatContext = createContext({});\r\nconst server = process.env.REACT_APP_SERVER;\r\n\r\n//=== styles\r\nconst StyledContainer = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  margin: `${theme.spacing(10)} auto`,\r\n  minHeight: 500,\r\n  maxWidth: 800,\r\n}));\r\n\r\nfunction Seats() {\r\n  const { socket } = useContext(SocketContext);\r\n  const [seats, setSeats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getSeats() {\r\n      const response = await fetch(server + \"/seats\", {\r\n        method: \"GET\",\r\n      });\r\n      const data = await response.json();\r\n      setSeats(data);\r\n    }\r\n\r\n    getSeats();\r\n    socket &&\r\n      socket.on(IO_EVENTS.RECEIVE_SEATS_INFO, (seats) => setSeats(seats));\r\n  }, [socket]);\r\n\r\n  //=== functions\r\n  const getAvailableSeatNo = () =>\r\n    seats.filter((seat) => seat.status === \"available\").length;\r\n\r\n  //=== vars\r\n  const availableSeats = getAvailableSeatNo();\r\n\r\n  return (\r\n    <SeatContext.Provider value={{ seats }}>\r\n      {socket && seats.length !== 0 ? (\r\n        <StyledContainer>\r\n          <Info availableSeats={availableSeats} />\r\n          <SeatsIcons />\r\n        </StyledContainer>\r\n      ) : (\r\n        <Progress />\r\n      )}\r\n    </SeatContext.Provider>\r\n  );\r\n}\r\n\r\nexport default memo(Seats);\r\n","import Navbar from \"./components/Navbar/Navbar\";\r\nimport Seats from \"./components/Seats/Seats\";\r\n\r\nimport SocketContextProvider from \"./context/socketContext\";\r\n\r\nfunction App() {\r\n  return (\r\n    <SocketContextProvider>\r\n      <Navbar />\r\n      <Seats />\r\n    </SocketContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}